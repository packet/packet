<%inherit file="cpp-base.template" />\

<%block name="header">\
// Automatically generated by Packet C++ code generator.

% for packet in pom.includes.values():
${self.include(packet.namespace)}
% endfor
</%block>\

% for name, packet in pom.packets.iteritems():
<%
  cpp_class_name = self.class_name(packet)
  cpp_parent_class = self.get_parent(packet)
%>\
class ${cpp_class_name} : public ${self.get_parent(packet)} {
 public:
  enum class SubPackets {
  % for p in packet.children:
    ${self.class_name(p).upper()},
  % endfor
  };

  explicit ${cpp_class_name}(size_t packet_size);
  ${cpp_class_name}(const IoVector& io_vector, size_t packet_size);
  ~${cpp_class_name}();

% for field in packet.fields:
  ${self.getter_decl(field)}
  ${self.setter_decl(field)}
% endfor

  ${self.get_size_decl(packet)}

 protected:
% for field in packet.fields:
  ${self.offset_decl(field)}
% endfor

 private:
% for field in packet.fields:
  ${self.static_getter_decl(field)}
  ${self.static_setter_decl(field)}
% endfor
};

% endfor
\
<%def name="getter_decl(field)" buffered="True" filter="trim">
${self.getter_prototype(field)};
</%def>\
\
<%def name="static_getter_decl(field)" buffered="True" filter="trim">
${self.static_getter_prototype(field)};
</%def>\
\
<%def name="setter_decl(field)" buffered="True" filter="trim">
${self.setter_prototype(field)};
</%def>\
\
<%def name="static_setter_decl(field)" buffered="True" filter="trim">
${self.static_setter_prototype(field)};
</%def>\
\
<%def name="offset_decl(field)" buffered="True" filter="trim">
${self.offset_prototype(field)};
</%def>\
\
<%def name="get_size_decl(packet)" buffered="True" filter="trim">
${self.get_size_prototype(packet)};
</%def>\

